description = "指定されたソースからRAGデータベースを構築し、discovery.jsonに登録します。 (例: /rag ./docs/my_project)"
prompt = """
プロジェクトルートの`discovery.json`を読んで各種のツールを発見、活用しながら、以下のタスクを完了させてください。
1.  `{{args}}`の種別（ローカルディレクトリ、WebページURL、GitHubリポジトリURL）に応じて、ツールを自律的に呼び出し、ドキュメントのテキスト内容を取得する
    *   **ローカルディレクトリの場合:**
        - `read_many_files` ツールを使い、ディレクトリ内の全ドキュメントを読み込みます。
    *   **Webページの場合:**
        - `http_fetch` ツールを使い、指定URLの本文を収集します。`--temp-dir` には `.tmp/<ドメイン名>/` の形式でパスを指定してください。
        - `html_to_markdown` ツールでマークダウン化します。
        - `ask_dir`ツールを使い、ユーザーにマークダウン文書群の保存ディレクトリを選択させます。
    *   **GitHubリポジトリの場合:**
                - `http_fetch` ツールを使い、リポジトリ内のドキュメントファイルを収集します。
            - `{{args}}` がGitHubリポジトリのURLである場合、そのURLからリポジトリのURLとリポジトリ内のパスを抽出し、`--repo-url` と `--path-in-repo` 引数として `github_fetch` に渡してください。
            - `--temp-dir` には `.tmp/<リポジトリオーナー名>/<リポジトリ名>/` の形式でパスを指定してください。
        - `html_to_markdown` ツールでマークダウン化します。
        - `ask_dir`ツールを使い、ユーザーにマークダウン文書群の保存ディレクトリを選択させます。
2.  自身の推論能力を用い、取得した各ドキュメントの内容を読み解き、それぞれについて `title` と `summary` を生成します。
3.  それら全ドキュメントの情報を集約して、一時ディレクトリに生成されている`discovery.json`を更新、文書ルートに保存する。`sample/document_discovery.json` をテンプレートとして活用すること。
4.  カタログの構築と登録が完了したことをユーザーに通知します。
※ パスを生成する際は、プラットフォームに依存しないフォワードスラッシュ（/）を使用してください。
"""